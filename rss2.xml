<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ENCHOYI</title>
    <link>https://enchoyism.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>ENCHOYI DEVLOG</description>
    <pubDate>Tue, 12 Mar 2019 14:13:28 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>macOS + iTerm2 setting guide (feat zsh)</title>
      <link>https://enchoyism.github.io/2019/03/12/macos-iterm2-setting/</link>
      <guid>https://enchoyism.github.io/2019/03/12/macos-iterm2-setting/</guid>
      <pubDate>Tue, 12 Mar 2019 13:16:23 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;macOS 기본 터미널을 대체하는 &lt;strong&gt;&lt;a href=&quot;https://www.iterm2.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;iTerm2&lt;/a&gt;&lt;/stro
        
      
      </description>
      
      <content:encoded><![CDATA[<p>macOS 기본 터미널을 대체하는 <strong><a href="https://www.iterm2.com/" rel="external nofollow noopener noreferrer" target="_blank">iTerm2</a></strong> 와 zsh를 이용하여 터미널을 세팅 하고, ls 명령어 사용시 파일 확장자별로 색을 입혀서 출력 시켜보도록 한다. macOS에서 사용되는 ls는 FreeBSD에서 사용되는 다른 버젼의 ls이다. 따라서 GNU ls를 사용하려면 별도로 설치를 해줘야 한다.</p><h1>iTerm2 + zsh</h1><h2>Homebrew 설치</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><h2>zsh 설치</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install zsh</span><br></pre></td></tr></table></figure><h2>zsh 설치경로 확인</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> zsh</span><br></pre></td></tr></table></figure><h2>기본 shell 변경</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chsh -s $(<span class="built_in">which</span> zsh)</span><br></pre></td></tr></table></figure><h2>oh-my-zsh 설치</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><h2>zsh theme 적용 (dracula)</h2><blockquote><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/robbyrussell/oh-my-zsh/wiki/themes</a><br><a href="https://draculatheme.com/zsh/" rel="external nofollow noopener noreferrer" target="_blank">https://draculatheme.com/zsh/</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~/.oh-my-zsh/themes/dracula.zsh-theme 의 경로로 테마 파일 이동.</span><br><span class="line">~/.zshrc =&gt; ZSH_THEME=&quot;&#123;테마&#125;&quot;</span><br></pre></td></tr></table></figure><h1>GNU ls</h1><h2>coreutils 설치</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install coreutils</span><br></pre></td></tr></table></figure><h2>GNU theme clone</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~ &amp;&amp; git clone https://github.com/seebi/dircolors-solarized.git ~/.dircolors-solarized</span><br></pre></td></tr></table></figure><h2>profile 추가 (~/.bash_profile or ~/.zsh_profile)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alias ls=&apos;gls --color=auto&apos;</span><br><span class="line">alias dir=&apos;gdir --color=auto&apos;</span><br><span class="line">alias grep=&apos;grep --color=auto&apos;</span><br><span class="line">eval $(gdircolors ~/.dircolors-solarized/dircolors.ansi-dark)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> &#123;~/.bash_profile&#125; OR &#123;~/.zsh_profile&#125;</span><br></pre></td></tr></table></figure><h1>Result</h1><p><img src="/images/macos-iterm2-setting-1.png" alt="macos-iterm2-setting-1"></p>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2019/03/12/macos-iterm2-setting/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Node.js + MySQL Connection lost</title>
      <link>https://enchoyism.github.io/2018/02/02/nodejs-mysql-connection-lost/</link>
      <guid>https://enchoyism.github.io/2018/02/02/nodejs-mysql-connection-lost/</guid>
      <pubDate>Fri, 02 Feb 2018 14:59:10 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&lt;strong&gt;해당 포스트는 Connection Pool을 사용시 release 또는 end등, idle timeout 등의 설정 및 처리가 완벽하다는 전제하에 작성되었다.&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;code&gt;Error: Connec
        
      
      </description>
      
      <content:encoded><![CDATA[<p><strong>해당 포스트는 Connection Pool을 사용시 release 또는 end등, idle timeout 등의 설정 및 처리가 완벽하다는 전제하에 작성되었다.</strong><br><strong><code>Error: Connection lost: The server closed the connection.</code></strong> Node.js와 MySQL을 이용한 개발 및 운영시 해당 에러를 뱉어내고 죽는 경우가 있다. 다른 언어의 플랫폼 및 프레임워크에서는 해당 사항에 대하여 어떤식으로 해결하고 있는지는 정확히 모르겠으나 적어도 Node.js + MySQL의 경우 구글링을 하여도 근본적인 원인에 대한 자세한 설명보다 이해하지 못하면 미봉책에 가까운 코드만 나열되어 있는 것 같아 문제에 대한 원인과 해결 방법을 기술한다.</p><h1>Node.js</h1><p>먼저 쉽게 찾아 볼 수 있는 해결책에 가까운 코드를 찾아보면 2가지 경우가 있다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Sol 1.</span></span><br><span class="line">‘use strict’;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(‘mysql’);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> conn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> createConn = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">conn = mysql.createConnection(&#123;</span><br><span class="line">host: ‘localhost’, <span class="attr">user</span>: ‘root’,</span><br><span class="line">password: ‘p@ssw0rd’, <span class="attr">database</span>: ‘example’</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">conn.connect(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (error) &#123;</span><br><span class="line"><span class="built_in">console</span>.log(connecting error: <span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"subst"</span>&gt;</span>$&#123;error&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>);</span><br><span class="line">setTimeout(createConn, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">conn.on(‘error’, (error) =&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (error.code === ‘PROTOCOL_CONNECTION_LOST’) &#123;</span><br><span class="line"><span class="keyword">return</span> createConn();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">throw</span> error;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">createConn();</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Sol 2.</span></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> db.query(‘SELECT <span class="number">1</span>’);</span><br><span class="line">&#125;, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure><p>위의 두가지 경우는 모두 단일 커넥션의 경우이다. 첫번째는 연결이 끊어졌을때 커넥션을 다시 연결하는 경우이고, 두번째는 일정시간동안 쿼리를 날려 커넥션을 강제로 유지하는 방법인데 Connection Pool을 사용한다면 Pool의 커넥션 자원을 모두 처리하기에는 어려움이 있어, 차라리 새로운 Pool을 생성하여 사용하는것이 더 좋다고 생각한다. 하지만 이 마저도 자원 낭비가 되기 때문에 근본적인 해결 방법은 아니라고 생각한다.</p><h1>MySQL(my.cnf)</h1><p><img src="/images/nodejs-mysql-connection-lost-1.png" alt="nodejs-mysql-connection-lost-1"><br>먼저 MySQL 또는 MariaDB를 구동후 위와 같이 Variables를 조회 하였을때 해당 문제를 해결하기 위해 주목해야 할 부분은 다음과 같다. <strong><code>interactive_timeout(콘솔 또는 터미널)</code></strong>, <strong><code>wait_timeout()</code></strong> 해당 의미는 모두 활동하지 않는 커넥션을 끊을때까지 서버가 대기하는 시간인데 위 설정의 경우는 3600초로 1시간동안 활동이 없으면 서버가 커넥션을 닫아버린다. 즉, 트래픽이 얼마 없는 서비스이거나 새벽시간대에 주로 에러를 뱉는 경우가 많다. 따라서 my.cnf에서 서비스에 적정한 값으로 수정후 해당 DB 데몬을 재실행 하여야 한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">… 중략</span><br><span class="line">[mysqld]</span><br><span class="line">wait_timeout            = &#123;적정한 값&#125;</span><br><span class="line">interactive_timeout     = &#123;적정한 값&#125;</span><br><span class="line">… 중략</span><br></pre></td></tr></table></figure><h1>Reference</h1><ul><li><a href="http://www.linuxchannel.net/docs/mysql-timeout.txt" rel="external nofollow noopener noreferrer" target="_blank">http://www.linuxchannel.net/docs/mysql-timeout.txt</a></li><li><a href="https://gist.github.com/hanjong/1205199" rel="external nofollow noopener noreferrer" target="_blank">https://gist.github.com/hanjong/1205199</a></li><li><a href="https://stackoverflow.com/questions/20210522/nodejs-mysql-error-connection-lost-the-server-closed-the-connection" rel="external nofollow noopener noreferrer" target="_blank">https://stackoverflow.com/questions/20210522/nodejs-mysql-error-connection-lost-the-server-closed-the-connection</a></li></ul>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2018/02/02/nodejs-mysql-connection-lost/#disqus_thread</comments>
    </item>
    
    <item>
      <title>CURLOPT_SSL_VERIFYHOST explained</title>
      <link>https://enchoyism.github.io/2018/01/25/curlopt-ssl-verifyhost/</link>
      <guid>https://enchoyism.github.io/2018/01/25/curlopt-ssl-verifyhost/</guid>
      <pubDate>Thu, 25 Jan 2018 14:25:48 GMT</pubDate>
      <description>
      
        
        
          &lt;h1&gt;cURL options&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Options&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;CURLOPT_SSL_VERIFYPEER&lt;/td&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<h1>cURL options</h1><table><thead><tr><th>Options</th><th>Description</th></tr></thead><tbody><tr><td>CURLOPT_SSL_VERIFYPEER</td><td>FALSE to stop cURL from verifying the peer’s certificate. Alternate certificates to verify against can be specified with the CURLOPT_CAINFO option or a certificate directory can be specified with the CURLOPT_CAPATH option.</td></tr><tr><td>CURLOPT_SSL_VERIFYHOST</td><td>1 to check the existence of a common name in the SSL peer certificate. 2 to check the existence of a common name and also verify that it matches the hostname provided. 0 to not check the names. In production environments the value of this option should be kept at 2 (default value).</td></tr></tbody></table><h1>Before: cURL Version &lt; 7.28.0</h1><p><code>libcurl/7.19.7 NSS/3.14.0.0 zlib/1.2.3 libidn/1.18 libssh2/1.4.2</code><br>위와 같이 NSS 라이브러리를 통해 빌드 하였다면 예컨데 다음과 같은 PHP 쓰임새를 보면</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="comment">// create curl resource</span></span><br><span class="line"> $ch = curl_init();</span><br><span class="line"></span><br><span class="line"> <span class="comment">// set url</span></span><br><span class="line"> curl_setopt($ch, CURLOPT_URL, “example.com”);</span><br><span class="line"></span><br><span class="line"> <span class="comment">//return the transfer as a string</span></span><br><span class="line"> curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// stop cURL from verifying the peer’s certificate</span></span><br><span class="line"> curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// $output contains the output string</span></span><br><span class="line"> $output = curl_exec($ch);</span><br><span class="line"></span><br><span class="line"> <span class="comment">// close curl resource to free up system resources</span></span><br><span class="line"> curl_close($ch);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>peer의 인증서를 확인 하지 않는다는 옵션 0 (CURLOPT_SSL_VERIFYPEER) 일때<br><code>CURLOPT_SSL_VERIFYHOST - verify the certificate's name against host</code>의 옵션은 DEFAULT=0이다.</p><h1>After: cURL Version &gt;= 7.28.0</h1><p><code>libcurl/7.46.0 OpenSSL/1.0.2k zlib/1.2.3 nghttp2/1.6.0</code></p><p>7.28.0 이후부터는 빌드시 NSS 라이브러리를 사용하지 않는데, 이때 CURLOPT_SSL_VERIFYHOST 의 옵션은 DEFAULT=2이다.<br>따라서 기존처럼 사용시 http code가 000으로 리턴되고 <strong>SSL: no alternative certificate subject name matches target host name</strong> 와 같은<br>에러 메시지로 정상동작하지 않는다면 반드시 CURLOPT_SSL_VERIFYPEER 옵션 명시할 것을 검토하여야 한다.<br>인증서 검증시 정상이거나 OS가 내장하고 있는 번들인증서가 최신이라면 오류날 가능성이 적으므로, 오류가 나지 않을 수도 있어, 반드시 테스트를 해봐야 정확히 파악이 가능하다.</p><p>CURLOPT_SSL_VERIFYPEER, CURLOPT_SSL_VERIFYHOST 두 값을 false로 명시하는것은 사실 보안상 좋진 않지만<br>장애가 날 경우를 대비하는 관점에서 명시하여 사용하는게 좋을 수 있다.</p><h1>Reference</h1><ul><li><a href="https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html" rel="external nofollow noopener noreferrer" target="_blank">https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html</a></li></ul>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2018/01/25/curlopt-ssl-verifyhost/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Node.js + Telegram 연동하기</title>
      <link>https://enchoyism.github.io/2018/01/11/nodejs-telegram/</link>
      <guid>https://enchoyism.github.io/2018/01/11/nodejs-telegram/</guid>
      <pubDate>Thu, 11 Jan 2018 14:10:50 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Node.js와 &lt;a href=&quot;https://core.telegram.org/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Telegram&lt;/a&gt; Bot API를 이용하여 메시지를
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Node.js와 <a href="https://core.telegram.org/" rel="external nofollow noopener noreferrer" target="_blank">Telegram</a> Bot API를 이용하여 메시지를 전달하는 간단한 방법을 소개한다. <a href="https://telegram.org/" rel="external nofollow noopener noreferrer" target="_blank">Telegram Messenger</a> 설치가 선행되어야 한다.</p><h1>Create Bot</h1><p><img src="/images/nodejs-telegram-1.png" alt="nodejs-telegram-1"></p><ol><li>@BotFather에게 /start 메시지를 보내어 수행할 수 있는 업무 리스트를 받는다.</li><li>Bot을 생성하기 위해 /newbot 메시지를 보낸다.</li><li>생성할 Bot이름과 Bot이 사용할 username(<strong>bot</strong>으로 끝나야함)을 전달한다.</li><li>위의 과정을 마치면 생성된 Bot에 접근할 수 있는 주소와 <strong>token</strong> 정보를 받게된다. <a href="http://t.me/%7Busername%7D%EC%9C%BC%EB%A1%9C" rel="external nofollow noopener noreferrer" target="_blank">t.me/{username}으로</a> 접근하여 봇과의 채팅을 시작한다.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Done! Congratulations on your new bot.</span><br><span class="line">You will find it at t.me/&#123;username&#125; You can now add a description,</span><br><span class="line">about section and profile picture for your bot,</span><br><span class="line">see /help for a list of commands.</span><br><span class="line">By the way, when you&apos;ve finished creating your cool bot,</span><br><span class="line">ping our Bot Support if you want a better username for it.</span><br><span class="line">Just make sure the bot is fully operational before you do this.</span><br><span class="line"></span><br><span class="line">Use this token to access the HTTP API: &#123;token&#125;</span><br><span class="line"></span><br><span class="line">For a description of the Bot API,</span><br><span class="line">see this page: https://core.telegram.org/bots/api</span><br></pre></td></tr></table></figure><h1>Message push</h1><h2>Get chat_id</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XPOST <span class="string">'https://api.telegram.org/bot&#123;token&#125;/getUpdates'</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"ok"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"result"</span>: &#123;</span><br><span class="line"><span class="string">"message_id"</span>: 11,</span><br><span class="line"><span class="string">"from"</span>: &#123;</span><br><span class="line"><span class="string">"id"</span>: &#123;chat_id&#125;,</span><br><span class="line"><span class="string">"is_bot"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"first_name"</span>: <span class="string">"&#123;first_name&#125;"</span>,</span><br><span class="line"><span class="string">"username"</span>: <span class="string">"&#123;username&#125;"</span></span><br><span class="line">&#125;,</span><br><span class="line">... 이하생략</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2>Send message</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ curl -XPOST <span class="string">'https://api.telegram.org/bot&#123;token&#125;/sendmessage'</span> -d <span class="string">'</span></span><br><span class="line"><span class="string">&amp;chat_id=&#123;chat_id&#125;&amp;text=hello</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"ok"</span>: <span class="literal">true</span>,</span><br><span class="line"><span class="string">"result"</span>: [</span><br><span class="line">... 이하생략&lt;/span&gt;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>Node.js sample</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> send = <span class="function">(<span class="params">text, callback</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> token = <span class="string">'YOUR_TOKEN'</span>;</span><br><span class="line">    <span class="keyword">const</span> chat_id = <span class="string">'YOUR_CHAT_ID'</span>;</span><br><span class="line">    <span class="keyword">const</span> options = &#123;</span><br><span class="line">        url: <span class="string">`https://api.telegram.org/bot<span class="subst">$&#123;token&#125;</span>/sendmessage`</span>,</span><br><span class="line">        form: &#123; <span class="attr">text</span>: text, <span class="attr">chat_id</span>: chat_id &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    request.post(options, (error) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">            <span class="keyword">return</span> callback(error);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        callback();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">send(<span class="string">'hello telegram bot'</span>, (error) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">`send error: <span class="subst">$&#123;error&#125;</span>`</span>);</span><br><span class="line">        process.exit(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'send success'</span>);</span><br><span class="line">    process.exit(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2018/01/11/nodejs-telegram/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Github + Hexo 검색 엔진 최적화(SEO)</title>
      <link>https://enchoyism.github.io/2018/01/02/github-hexo-seo/</link>
      <guid>https://enchoyism.github.io/2018/01/02/github-hexo-seo/</guid>
      <pubDate>Tue, 02 Jan 2018 14:10:58 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Github + Hexo 웹 페이지에서 &lt;strong&gt;검색 엔진 최적화(SEO)에 유용한 플러그인&lt;/strong&gt;을 소개한다.&lt;/p&gt;
&lt;h1&gt;&lt;a href=&quot;https://github.com/liuzc/hexo-autonofollow&quot; rel=&quot;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Github + Hexo 웹 페이지에서 <strong>검색 엔진 최적화(SEO)에 유용한 플러그인</strong>을 소개한다.</p><h1><a href="https://github.com/liuzc/hexo-autonofollow" rel="external nofollow noopener noreferrer" target="_blank">hexo-autonofollow</a></h1><p>각 포스트의 외부 링크에 대해 자동으로 <code>nofollow</code> 속성을 추가 해준다.</p><h3>Install &amp; Option</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-autonofollow --save</span><br></pre></td></tr></table></figure><p>_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">  <span class="comment"># 플러그인 활성화</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 제외할 호스트</span></span><br><span class="line"><span class="attr">  exclude:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">exclude1.com</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">exclude2.com</span></span><br></pre></td></tr></table></figure><h1><a href="https://github.com/HyunSeob/hexo-auto-canonical" rel="external nofollow noopener noreferrer" target="_blank">hexo-auto-canonical</a></h1><p>각 포스트마다 자동으로 표준 링크를 만들어 준다.</p><h3>Install &amp; Option</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-auto-canonical --save</span><br></pre></td></tr></table></figure><p>HTML <code>&lt;head&gt;</code> 태그안에 추가.<br>with ejs</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">autoCanonical</span>(<span class="attr">config</span>, <span class="attr">page</span>) %&gt;</span></span><br></pre></td></tr></table></figure><p>with jade</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!&#123; autoCanonical(config, page) &#125;</span><br></pre></td></tr></table></figure><h1><a href="https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap" rel="external nofollow noopener noreferrer" target="_blank">hexo-generator-seo-friendly-sitemap</a></h1><p>크롤러가 페이지를 효율적으로 크롤링할 수 있도록 sitemap.xml을 자동으로 생성해준다.</p><h3>Install &amp; Option</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure><p>_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sitemap auto generator</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure><p>배포후 <a href="https://username.github.io/sitemap.xml" rel="external nofollow noopener noreferrer" target="_blank">https://username.github.io/sitemap.xml</a> 에서 확인 가능하다.</p><p>생성된 sitemap.xml 파일을 검색엔진 <a href="https://www.google.com/webmasters/tools/home?hl=ko" rel="external nofollow noopener noreferrer" target="_blank">구글 웹마스터 도구</a> | <a href="http://webmastertool.naver.com/" rel="external nofollow noopener noreferrer" target="_blank">네어버 웹마스터 도구</a> 등에 제출 해본다.</p><h1><a href="https://github.com/hexojs/hexo-generator-feed" rel="external nofollow noopener noreferrer" target="_blank">hexo-generator-feed</a></h1><p>Atom 1.0 또는 RSS 2.0 피드를 생성한다.</p><h3>Install &amp; Option</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rss feed auto generator</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="comment"># feed type (atom / rss2)</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">rss2</span></span><br><span class="line">  <span class="comment"># feed path (Default: atom.xml / rss2.xml)</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">rss2.xml</span></span><br><span class="line">  <span class="comment"># 최신 포스트의 갯수 설정. (0 또는 false 입력시 전체 포스트)</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure><p>배포후 <a href="https://username.github.io/rss2.xml" rel="external nofollow noopener noreferrer" target="_blank">https://username.github.io/rss2.xml</a> 에서 확인 가능하다.</p><p>생성된 rss2.xml 파일을 검색엔진 <a href="https://www.google.com/webmasters/tools/home?hl=ko" rel="external nofollow noopener noreferrer" target="_blank">구글 웹마스터 도구</a> | <a href="http://webmastertool.naver.com/" rel="external nofollow noopener noreferrer" target="_blank">네어버 웹마스터 도구</a> 등에 제출 해본다.</p><h1>robot.txt</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow:/</span><br><span class="line"></span><br><span class="line">Sitemap: https://username.github.io/sitemap.xml</span><br></pre></td></tr></table></figure><p>파일을 검색엔진 <a href="https://www.google.com/webmasters/tools/home?hl=ko" rel="external nofollow noopener noreferrer" target="_blank">구글 웹마스터 도구</a> | <a href="http://webmastertool.naver.com/" rel="external nofollow noopener noreferrer" target="_blank">네어버 웹마스터 도구</a> 등에 제출 해본다.</p><h1><a href="#Related-Posts" title="Related Posts"></a>Related Posts</h1><ul><li><a href="https://enchoyism.github.io/2018/01/01/github-hexo">Github + Hexo 웹 페이지 만들기</a></li><li><a href="https://enchoyism.github.io/2018/01/02/github-hexo-seo">Github + Hexo 검색 엔진 최적화(SEO)</a></li></ul>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2018/01/02/github-hexo-seo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Github + Hexo 웹 페이지 만들기</title>
      <link>https://enchoyism.github.io/2018/01/01/github-hexo/</link>
      <guid>https://enchoyism.github.io/2018/01/01/github-hexo/</guid>
      <pubDate>Mon, 01 Jan 2018 13:44:43 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Github에서 제공하는 &lt;a href=&quot;https://pages.github.com/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Github Pages&lt;/a&gt;라는 호스팅 서비스를
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Github에서 제공하는 <a href="https://pages.github.com/" rel="external nofollow noopener noreferrer" target="_blank">Github Pages</a>라는 호스팅 서비스를 이용하면 개인 웹페이지를 무료로 생성할 수 있다. 생성된 웹페이지에 <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo framework</a>를 이용하여 테마를 입힌 과정을 기술한다.</p><blockquote><p><strong>준비사항:</strong></p><ul><li><a href="https://nodejs.org/" rel="external nofollow noopener noreferrer" target="_blank">Node.js</a></li><li><a href="https://git-scm.com/" rel="external nofollow noopener noreferrer" target="_blank">Git</a></li><li><a href="https://github.com/" rel="external nofollow noopener noreferrer" target="_blank">Github Account</a></li></ul></blockquote><h1>Github Pages</h1><div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/2MsN8gpT6jY" style="position:absolute;width:100%;height:100%;left:0" width="640" height="360" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></div><p>Github Pages는 <strong>무료</strong>이다. 또한 가입형 블로그의 경우 제한된 프레임 안에서 사용해야 하기 때문에 편집시 제한이 많이 있다. 하지만 Github Pages의 경우 학습이 필요하긴 하지만 자유롭게 변경이 가능하다. Terminal 기반이 익숙하지 않다면 <a href="https://pages.github.com/" rel="external nofollow noopener noreferrer" target="_blank">Github Pages</a>에서 다른 버젼의 설명을 선택하여 진행한다.</p><h3>New repo</h3><p>Github 계정 생성후 아래 이미지와 같이 저장소를 생성한다.<br><img src="/images/github-hexo-1.png" alt="github-hexo-1"></p><blockquote><p>Repository name은 <a href="http://username.github.io" rel="external nofollow noopener noreferrer" target="_blank">username.github.io</a><br>username은 계정명으로 사용<br>Public / Private 중 Public 선택 후 저장소 생성</p></blockquote><h3><a href="#Clone" title="Clone"></a>Clone</h3><p>프로젝트를 저장할 로컬 폴더로 이동하여 새 저장소를 복제한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/username/username.github.io</span><br></pre></td></tr></table></figure><h3>Hello World</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> username.github.io</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"Hello World"</span> &gt; index.html</span><br></pre></td></tr></table></figure><h3>Push it</h3><p>변경 내역 모두 add, commit, push</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add --all</span><br><span class="line">$ git commit -m <span class="string">"Initial commit"</span></span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><h3><a href="#%E2%80%A6and-you%E2%80%99re-done" title="…and you’re done!"></a>…and you’re done!</h3><p><strong><a href="https://username.github.io" rel="external nofollow noopener noreferrer" target="_blank">https://username.github.io</a></strong> 웹 브라우져로 접속하여 확인한다.</p><h1>Hexo</h1><div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://www.youtube.com/embed/ARted4RniaU" style="position:absolute;width:100%;height:100%;left:0" width="640" height="360" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe></div><p><a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>와 <a href="https://jekyllrb.com/" rel="external nofollow noopener noreferrer" target="_blank">Jekyll</a>은 Github Pages와 함께 다양한 빌트인 테마와 플러그인을 지원하고 있다. 즉, HTML작성에 신경쓰지 않고, Markdown문법을 기준으로 텍스트 내용을 작성하면 static site generator가 알아서 HTML로 바꿔준다. 본 사이트는 Hexo를 이용하여 테마를 입혀놓았다.(Jekyll 보다 알흠다운 테마가 많은것 같다.)</p><h3>Install Hexo cli, Setup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">// Hexo 설치후 다음 명령을 실행하여 대상 &lt;folder&gt;에서 Hexo 초기화.</span><br><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>일단 초기화되면 프로젝트 폴더 구조는 다음과 같다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h3>_config.yml</h3><p><strong><a href="https://hexo.io/docs/configuration.html" rel="external nofollow noopener noreferrer" target="_blank">사이트 구성 파일</a></strong>. 여기에서 기본적인 설정을 구성 할 수 있다.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span></span><br><span class="line"><span class="attr">subtitle:</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">author:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://username.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/username/username.github.io</span></span><br></pre></td></tr></table></figure><h3>Test</h3><p>기본적인 설정 완료후 로컬 서버를 구동후 웹 브라우져에서 <a href="http://localhost:4000" rel="external nofollow noopener noreferrer" target="_blank">http://localhost:4000</a> 에 접속하여 테스트가 가능하다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h3>Post and deploy</h3><p><a href="https://enchoyism.github.io/2017/12/31/hello-hexo/">Hello Hexo</a> 포스트를 확인하여 배포 한다. 간혹 배포후 페이지가 업데이트가 되지 않는다면 다음과 같이 해결한다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></table></figure><h3>Theme</h3><blockquote><p><a href="https://hexo.io/themes/" rel="external nofollow noopener noreferrer" target="_blank">https://hexo.io/themes/</a></p></blockquote><p>대부분 Theme 페이지는 Github 페이지 링크 및 자세한 설명이 포함되어 있다.</p><h1><a href="#Reference" title="Reference"></a>Reference</h1><ul><li><a href="https://pages.github.com/" rel="external nofollow noopener noreferrer" target="_blank">https://pages.github.com/</a></li><li><a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">https://hexo.io/</a></li><li><a href="https://jekyllrb.com/" rel="external nofollow noopener noreferrer" target="_blank">https://jekyllrb.com/</a></li></ul><h1><a href="#Related-Posts" title="Related Posts"></a>Related Posts</h1><ul><li><a href="https://enchoyism.github.io/2018/01/01/github-hexo">Github + Hexo 웹 페이지 만들기</a></li><li><a href="https://enchoyism.github.io/2018/01/02/github-hexo-seo">Github + Hexo 검색 엔진 최적화(SEO)</a></li></ul>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2018/01/01/github-hexo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://enchoyism.github.io/2017/12/31/hello-world/</link>
      <guid>https://enchoyism.github.io/2017/12/31/hello-world/</guid>
      <pubDate>Sun, 31 Dec 2017 13:00:43 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;! This is your very first post.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" rel="external nofollow noopener noreferrer" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" rel="external nofollow noopener noreferrer" target="_blank">GitHub</a>.</p><h2>Quick Start</h2><h3>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" rel="external nofollow noopener noreferrer" target="_blank">Writing</a></p><h3>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" rel="external nofollow noopener noreferrer" target="_blank">Server</a></p><h3>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" rel="external nofollow noopener noreferrer" target="_blank">Generating</a></p><h3>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" rel="external nofollow noopener noreferrer" target="_blank">Deployment</a></p>]]></content:encoded>
      
      <comments>https://enchoyism.github.io/2017/12/31/hello-world/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
